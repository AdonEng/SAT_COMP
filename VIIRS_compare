# Adonis Engel
# Script to read CSV and VIIRS TIFF files then produce a value of relative correlation

import rasterio
from rasterio.warp import transform
import pandas as pd
import numpy as np
import os
from datetime import datetime

# CONFIG
summary_csv = "snow_mask_summary.csv"
viirs_folder = r"C:\Users\Public\EarthData\output"
output_csv = "snow_comparison_results.csv"

date.strftime("%Y%j")  # e.g., 2025-07-24 -> "2025205"

print("Loading ground observation summary...")
df = pd.read_csv(summary_csv)

results = []

with rasterio.open(tiff_path) as src:
    data = src.read(1)
    crs = src.crs
    transform_affine = src.transform

    x, y = transform('EPSG:4326', crs, [lon], [lat])
    row, col = ~transform_affine * (x[0], y[0])
    row, col = int(row), int(col)


# Processing Loop
print("Starting satellite data comparison...")

for idx, row in df.iterrows():
    timestamp = row['timestamp']
    if pd.isnull(timestamp):
        continue

    date_str = pd.to_datetime(timestamp).strftime("%Y_%m_%d")
    lat, lon = row['lat'], row['lon']
    if pd.isnull(lat) or pd.isnull(lon):
        continue

    # VIIRS
    viirs_snow = None
    viirs_files = [f for f in os.listdir(viirs_folder) if julian_date_str in f and f.endswith('.tif')]
    if viirs_files:
        viirs_path = os.path.join(viirs_folder, viirs_files[0])
        print(f"[INFO] Matched {row['filename']} to {viirs_files[0]}")
        viirs_snow = sample_geotiff_at_point(viirs_path, lon, lat, snow_codes=VIIRS_CODES)
    else:
        print(f"[WARN] No VIIRS file found for {julian_date_str}")

    ground_snow = 1 if row['snow_percent'] > 5 else 0

    results.append({
        "filename": row['filename'],
        "timestamp": timestamp,
        "site_code": row['site_code'],
        "site_name": row['site_name'],
        "lat": lat,
        "lon": lon,
        "ground_snow_percent": row['snow_percent'],
        "ground_snow_binary": ground_snow,
        "viirs_snow_binary": viirs_snow,
    })

# Save Comparison Results
out_df = pd.DataFrame(results)
out_df.to_csv(output_csv, index=False)
print(f" Comparison complete. Results saved to {output_csv}.")
